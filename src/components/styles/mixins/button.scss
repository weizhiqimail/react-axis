@mixin button-size($height, $padding, $font-size, $border-radius) {
  height: $height;
  padding: $padding;
  font-size: $font-size;
  border-radius: $border-radius;
}

@mixin button-color($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;
}

@mixin button-variant($color, $background, $border) {
  @include button-color($color, $background, $border);

  &:hover {
    @include button-color(lighten($color, 20%), lighten($background, 20%), lighten($border, 20%));
  }

  &:active,
  &.active {
    @include button-color(lighten($color, 5%), lighten($background, 5%), lighten($border, 5%));
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &:active,
    &.active {
      @include button-color($btn-disable-color, $btn-disable-bg, $btn-disable-border);
    }
  }
}

@mixin active-btn-color($color) {
  &:focus {
    box-shadow: 0 0 0 2px lighten($color, 20%);
  }
}

@mixin btn-square($btnClassName) {

  @include square($btn-square-size);
  @include button-size($btn-square-size, 0, $font-size-base + 2px, $btn-border-radius);

  &.#{btnClassName}-large {
    @include square($btn-square-size-large);
    @include button-size($btn-square-size-large, 0, $btn-font-size-large + 2px, $btn-border-radius);
  }
  &.#{btnClassName}-small {
    @include square($btn-square-size-small);
    @include button-size($btn-square-size-small, 0, $font-size-base, $btn-border-radius);
  }
}

@mixin btn() {
  display: inline-block;
  margin-bottom: 0;
  font-weight: $btn-font-weight;
  text-align: center;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  background-image: none;
  border: 1px solid transparent;
  white-space: nowrap;

  @include button-size($btn-height-base, $btn-padding-base, $btn-font-size, $btn-border-radius);

  transition: color $transition-time linear, background-color $transition-time linear, border $transition-time linear, box-shadow $transition-time linear;

  .#{$css-prefix-iconfont} {
    line-height: $line-height-base;
  }

  > span, > i {
    display: inline-block;
  }

  &,
  &:active,
  &:focus {
    outline: 0;
  }

  &:not([disabled]):hover {
    text-decoration: none;
  }

  &:not([disabled]):active {
    outline: 0;
    // transition: none;  // 如果不注释此行，那么active会和focus同时触发，此时focus的开始动画transition会无效
  }

  &.disabled,
  &[disabled] {
    cursor: $cursor-disabled;

    > * {
      pointer-events: none;
    }
  }

  &-large {
    @include button-size($btn-height-large, $btn-padding-large, $btn-font-size-large, $btn-border-radius);
  }

  &-small {
    @include button-size($btn-height-small, $btn-padding-small, $btn-font-size, $btn-border-radius-small);
  }


}

@mixin btn-color($color) {
  @include button-variant($btn-primary-color, $color, $color);

  &:hover,
  &:active,
  &.active {
    color: $btn-primary-color;
  }

  @include active-btn-color($color);
}

@mixin btn-default() {
  @include button-variant($btn-default-color, $btn-default-bg, $btn-default-border);

  &:hover {
    @include button-color(lighten($primary-color, 20%), white, lighten($primary-color, 20%));
  }

  &:active,
  &.active {
    @include button-color(lighten($primary-color, 5%), white, lighten($primary-color, 5%));
  }
  @include active-btn-color($primary-color);
}

@mixin btn-primary() {
  @include button-variant($btn-primary-color, $btn-primary-bg, $primary-color);

  &:hover,
  &:active,
  &.active {
    color: $btn-primary-color;
  }
  @include active-btn-color($primary-color);
}

@mixin btn-ghost() {
  @include button-variant($btn-ghost-color, $btn-ghost-bg, $btn-ghost-border);

  &:hover {
    @include button-color(lighten($primary-color, 20%), $btn-ghost-bg, lighten($primary-color, 20%));
  }

  &:active,
  &.active {
    @include button-color(lighten($primary-color, 5%), $btn-ghost-bg, lighten($primary-color, 5%));
  }
  @include active-btn-color($primary-color);
}

@mixin btn-dashed() {
  border-style: dashed;

  @include button-variant($btn-ghost-color, $btn-ghost-bg, $btn-ghost-border);

  &:hover {
    @include button-color(lighten($primary-color, 20%), $btn-ghost-bg, lighten($primary-color, 20%));
  }

  &:active,
  &.active {
    @include button-color(lighten($primary-color, 5%), $btn-ghost-bg, lighten($primary-color, 5%));
  }
  @include active-btn-color($primary-color);
}

@mixin btn-text() {
  @include button-variant($btn-ghost-color, transparent, transparent);

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &:active,
    &.active {
      @include button-color($btn-disable-color, $btn-ghost-bg, transparent);
    }
  }

  &:hover {
    @include button-color(lighten($primary-color, 20%), $btn-ghost-bg, transparent);
  }

  &:active,
  &.active {
    @include button-color(lighten($primary-color, 5%), $btn-ghost-bg, transparent);
  }

  @include active-btn-color($primary-color);

}

@mixin btn-circle($btnClassName: axis-btn) {
  border-radius: $btn-circle-size;

  &.#{btnClassName}-large {
    border-radius: $btn-circle-size-large;
  }

  &.#{btnClassName}-size {
    border-radius: $btn-circle-size-small;
  }

  &.#{btnClassName}-icon-only {
    @include square($btn-circle-size);
    @include button-size($btn-height-base, 0, $font-size-base + 2, 50%);

    &.#{btnClassName}-large {
      @include square($btn-circle-size-large);
      @include button-size($btn-height-large, 0, $btn-font-size-large + 2, 50%);
    }

    &.#{btnClassName}-small {
      @include square($btn-circle-size-small);
      @include button-size($btn-height-small, 0, $font-size-base, 50%);
    }
  }
}

